{"remainingRequest":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\src\\components\\player.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\src\\components\\player.vue","mtime":1624284527300},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQppbXBvcnQgc3RvcmUgZnJvbSAnLi4vc3RvcmUnDQpleHBvcnQgZGVmYXVsdCB7DQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHZpZGVvX3NyYzogIiIsDQogICAgICAgICAgICB0aXRsZToiIiwNCiAgICAgICAgICAgIGlkOiAwLA0KICAgICAgICAgICAgdXNlcl9pZDogc3RvcmUuc3RhdGUudXNlcl9pZCwNCiAgICAgICAgICAgIGFsbF9jb21tZW50czogW10NCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczp7DQogICAgICAgIGhhbmRsZV9jb21tZW50OiBmdW5jdGlvbiBoYW5kbGVfY29tbWVudChpZCwgdXNlcl9pZCl7DQogICAgICAgICAgICBjb25zdCB7Y29tbWVudH0gPSB0aGlzOw0KICAgICAgICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2NvbW1lbnQnLCB7DQogICAgICAgICAgICAgICAgaWQsDQogICAgICAgICAgICAgICAgdXNlcl9pZCwNCiAgICAgICAgICAgICAgICBjb21tZW50DQogICAgICAgICAgICB9KS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSkNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRuZXdDb21tZW50KCkNCiAgICAgICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBnZXRDb21tZW50czogZnVuY3Rpb24gZ2V0Q29tbWVudHMoKXsNCiAgICAgICAgICAgIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2dldENvbW1lbnRzJykudGhlbigoUmVzcG9uc2UpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhSZXNwb25zZS5kYXRhKQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWxsX2NvbW1lbnRzKQ0KICAgICAgICAgICAgICAgIFJlc3BvbnNlLmRhdGEuZm9yRWFjaChlbGVtZW50ID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGxfY29tbWVudHMucHVzaCh7InRleHQiOiBlbGVtZW50LnRleHQsICJ1c2VybmFtZSI6IGVsZW1lbnQudXNlcm5hbWUsIHRpbWU6IGVsZW1lbnQudGltZX0pDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFsbF9jb21tZW50cykNCiAgICAgICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBsb2FkbmV3Q29tbWVudDogZnVuY3Rpb24gbG9hZG5ld0NvbW1lbnQoKXsNCiAgICAgICAgICAgIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2dldENvbW1lbnRzJykudGhlbigoUmVzcG9uc2UpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmFsbF9jb21tZW50cy5sZW5ndGggPSAwDQogICAgICAgICAgICAgICAgUmVzcG9uc2UuZGF0YS5mb3JFYWNoKGVsZW1lbnQgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbF9jb21tZW50cy5wdXNoKHsidGV4dCI6IGVsZW1lbnQudGV4dCwgInVzZXJuYW1lIjogZWxlbWVudC51c2VybmFtZSwgdGltZTogZWxlbWVudC50aW1lfSkNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWxsX2NvbW1lbnRzKQ0KICAgICAgICAgICAgfSkuY2F0Y2goKGVycikgPT4gew0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycikNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0sIA0KDQogICAgfSwNCiAgICBjcmVhdGVkKCkgew0KICAgICAgICB0aGlzLnZpZGVvX3NyYyA9IHN0b3JlLnN0YXRlLnZpZGVvDQogICAgICAgIHRoaXMudGl0bGUgPSBzdG9yZS5zdGF0ZS50aXRsZQ0KICAgICAgICB0aGlzLmlkID0gc3RvcmUuc3RhdGUudmlkZW9faWQNCiAgICAgICAgdGhpcy5nZXRDb21tZW50cygpDQogICAgfSwNCn0NCg=="},{"version":3,"sources":["player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"player.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"video-container\">\r\n        <video :src=\"require(`../assets/VIDEOS/${video_src}`)\" controls autoplay muted></video>\r\n        <p>{{title}}</p>\r\n        <button class=\"like\"></button>\r\n        <button class=\"dislike\"></button>\r\n        <textarea type=\"text\" v-model=\"comment\" placeholder=\"Comment...\" rows=\"4\" cols=\"50\"></textarea>\r\n        <button type=\"submit\" @click=\"handle_comment(id, user_id)\">Submit comment</button>\r\n        <div class=\"comments\" v-for=\"comment in all_comments\" :key=\"comment\">\r\n            <p>{{comment.username}}</p>\r\n            <p>{{comment.text}}</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport store from '../store'\r\nexport default {\r\n    data() {\r\n        return {\r\n            video_src: \"\",\r\n            title:\"\",\r\n            id: 0,\r\n            user_id: store.state.user_id,\r\n            all_comments: []\r\n        }\r\n    },\r\n    methods:{\r\n        handle_comment: function handle_comment(id, user_id){\r\n            const {comment} = this;\r\n            axios.post('http://localhost:3000/comment', {\r\n                id,\r\n                user_id,\r\n                comment\r\n            }).then((res) => {\r\n                console.log(res.data)\r\n                this.loadnewComment()\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        getComments: function getComments(){\r\n            axios.get('http://localhost:3000/getComments').then((Response) => {\r\n                console.log(Response.data)\r\n                console.log(this.all_comments)\r\n                Response.data.forEach(element => {\r\n                    this.all_comments.push({\"text\": element.text, \"username\": element.username, time: element.time})\r\n                })\r\n                console.log(this.all_comments)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        loadnewComment: function loadnewComment(){\r\n            axios.get('http://localhost:3000/getComments').then((Response) => {\r\n                this.all_comments.length = 0\r\n                Response.data.forEach(element => {\r\n                    this.all_comments.push({\"text\": element.text, \"username\": element.username, time: element.time})\r\n                })\r\n                console.log(this.all_comments)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }, \r\n\r\n    },\r\n    created() {\r\n        this.video_src = store.state.video\r\n        this.title = store.state.title\r\n        this.id = store.state.video_id\r\n        this.getComments()\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n    .like{\r\n        background-image: url(../assets/like.png) no-repeat;\r\n    }\r\n    .dislike{\r\n        backgroundI: url(../assets/dislike.png) no-repeat;\r\n    }\r\n</style>"]}]}