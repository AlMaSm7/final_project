{"remainingRequest":"C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\src\\components\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\src\\components\\upload.vue","mtime":1623759157903},{"path":"C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\ZLI\\Abschluss_Projekt\\videoshare\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L3dvcmsvWkxJL0Fic2NobHVzc19Qcm9qZWt0L3ZpZGVvc2hhcmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovd29yay9aTEkvQWJzY2hsdXNzX1Byb2pla3QvdmlkZW9zaGFyZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRodW1ibmFpbDogIiIsCiAgICAgIHZpZGVvOiAiIiwKICAgICAgdGl0bGU6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlRmlsZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2hhbmRsZUZpbGUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy4kcmVmcyk7CiAgICAgICAgICAgICAgICB0aGlzLnRodW1ibmFpbCA9IHRoaXMuJHJlZnMudGh1bWJuYWlsLmZpbGVzWzBdOwogICAgICAgICAgICAgICAgdGhpcy52aWRlbyA9IHRoaXMuJHJlZnMudmlkZW8uZmlsZXNbMF07CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBoYW5kbGVGaWxlKCkgewogICAgICAgIHJldHVybiBfaGFuZGxlRmlsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaGFuZGxlRmlsZTsKICAgIH0oKSwKICAgIHVwbG9hZDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3VwbG9hZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGZvcm1kYXRhLCBfaXRlcmF0b3IsIF9zdGVwLCBrZXksIGhlYWRlcnM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvL3ZhciB2YXJpYWJsZXMgPSB0aGlzCiAgICAgICAgICAgICAgICBmb3JtZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgZm9ybWRhdGEuYXBwZW5kKCJ2aWRlbyIsIHRoaXMudmlkZW8pOwogICAgICAgICAgICAgICAgZm9ybWRhdGEuYXBwZW5kKCJ0aHVtYm5haWwiLCB0aGlzLnRodW1ibmFpbCk7CiAgICAgICAgICAgICAgICBmb3JtZGF0YS5hcHBlbmQoInRpdGxlIiwgdGhpcy50aXRsZSk7CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihmb3JtZGF0YS5lbnRyaWVzKCkpOwoKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICAgICAga2V5ID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5WzBdICsgIiwgIiArIGtleVsxXSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBoZWFkZXJzID0gewogICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogIm11bHRpcGFydC9mb3JtLWRhdGEiCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZm9ybWRhdGEpOwogICAgICAgICAgICAgICAgYXhpb3MucG9zdCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3VwbG9hZCIsIGZvcm1kYXRhLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiTm9kZWpzIHdvcmtpbmcgbm93Iik7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHVwbG9hZCgpIHsKICAgICAgICByZXR1cm4gX3VwbG9hZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBsb2FkOwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA;AAAA,gFAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,qBAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,qBAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,eAAA,UAAA;AAAA;AAAA;;AAAA,aAAA,UAAA;AAAA,OADA;AAMA,IAAA,MAAA;AAAA,4EAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA,gBAAA,QAHA,GAGA,IAAA,QAAA,EAHA;AAKA,gBAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,KAAA;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,SAAA;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,KAAA;AAPA,uDASA,QAAA,CAAA,OAAA,EATA;;AAAA;AASA,sEAAA;AAAA,oBAAA,GAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,IAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;;AAYA,gBAAA,OAZA,GAYA;AACA,kCAAA;AADA,iBAZA;AAgBA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,gBAAA,KAAA,CACA,IADA,CACA,8BADA,EACA,QADA,EACA;AACA,kBAAA,OAAA,EAAA;AADA,iBADA,EAIA,IAJA,CAIA,YAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;AACA,iBANA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBATA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,eAAA,MAAA;AAAA;AAAA;;AAAA,aAAA,MAAA;AAAA;AANA;AARA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n      <label for=\"file\">Thumbnail</label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"thumbnail\"\r\n        ref=\"thumbnail\"\r\n        name=\"thumbnail\"\r\n        v-on:change=\"handleFile()\"\r\n        required\r\n      />\r\n      <label for=\"video\">Video</label>\r\n      <input\r\n        type=\"file\"\r\n        name=\"video\"\r\n        id=\"video\"\r\n        ref=\"video\"\r\n        v-on:change=\"handleFile()\"\r\n        required\r\n      />\r\n      <input\r\n      type=\"text\"\r\n      placeholder=\"Title...\"\r\n      v-model=\"title\"\r\n      required\r\n    />\r\n\r\n      <button type=\"submit\" v-on:click=\"upload()\">Submit</button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      thumbnail: \"\",\r\n      video: \"\",\r\n      title:\"\"\r\n    };\r\n  },\r\n  methods: {\r\n    handleFile: async function handleFile() {\r\n      console.log(this.$refs);\r\n      this.thumbnail = this.$refs.thumbnail.files[0];\r\n      this.video = this.$refs.video.files[0];\r\n    },\r\n    upload: async function upload() {\r\n      //var variables = this\r\n\r\n      let formdata = new FormData();\r\n\r\n      formdata.append(\"video\", this.video)\r\n      formdata.append(\"thumbnail\", this.thumbnail)\r\n      formdata.append(\"title\", this.title)\r\n\r\n      for (var key of formdata.entries()) {\r\n        console.log(key[0] + \", \" + key[1]);\r\n      }\r\n      const headers = {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      };\r\n\r\n      console.log(formdata);\r\n      axios\r\n        .post(\"http://localhost:3000/upload\", formdata, {\r\n          headers: headers,\r\n        })\r\n        .then(function () {\r\n          console.log(\"Nodejs working now\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"sourceRoot":"src/components"}]}