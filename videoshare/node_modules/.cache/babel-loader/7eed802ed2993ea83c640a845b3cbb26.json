{"remainingRequest":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\src\\components\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\src\\components\\upload.vue","mtime":1623759157903},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\ZLI\\Back_up\\final_project\\videoshare\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L3dvcmsvWkxJL0JhY2tfdXAvZmluYWxfcHJvamVjdC92aWRlb3NoYXJlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3dvcmsvWkxJL0JhY2tfdXAvZmluYWxfcHJvamVjdC92aWRlb3NoYXJlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGh1bWJuYWlsOiAiIiwKICAgICAgdmlkZW86ICIiLAogICAgICB0aXRsZTogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVGaWxlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfaGFuZGxlRmlsZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRyZWZzKTsKICAgICAgICAgICAgICAgIHRoaXMudGh1bWJuYWlsID0gdGhpcy4kcmVmcy50aHVtYm5haWwuZmlsZXNbMF07CiAgICAgICAgICAgICAgICB0aGlzLnZpZGVvID0gdGhpcy4kcmVmcy52aWRlby5maWxlc1swXTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGhhbmRsZUZpbGUoKSB7CiAgICAgICAgcmV0dXJuIF9oYW5kbGVGaWxlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBoYW5kbGVGaWxlOwogICAgfSgpLAogICAgdXBsb2FkOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdXBsb2FkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZm9ybWRhdGEsIF9pdGVyYXRvciwgX3N0ZXAsIGtleSwgaGVhZGVyczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vdmFyIHZhcmlhYmxlcyA9IHRoaXMKICAgICAgICAgICAgICAgIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgICAgICBmb3JtZGF0YS5hcHBlbmQoInZpZGVvIiwgdGhpcy52aWRlbyk7CiAgICAgICAgICAgICAgICBmb3JtZGF0YS5hcHBlbmQoInRodW1ibmFpbCIsIHRoaXMudGh1bWJuYWlsKTsKICAgICAgICAgICAgICAgIGZvcm1kYXRhLmFwcGVuZCgidGl0bGUiLCB0aGlzLnRpdGxlKTsKICAgICAgICAgICAgICAgIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGZvcm1kYXRhLmVudHJpZXMoKSk7CgogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgICAgICBrZXkgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXlbMF0gKyAiLCAiICsga2V5WzFdKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGhlYWRlcnMgPSB7CiAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmb3JtZGF0YSk7CiAgICAgICAgICAgICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdXBsb2FkIiwgZm9ybWRhdGEsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJOb2RlanMgd29ya2luZyBub3ciKTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gdXBsb2FkKCkgewogICAgICAgIHJldHVybiBfdXBsb2FkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB1cGxvYWQ7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA;AAAA,gFAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,qBAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,qBAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,eAAA,UAAA;AAAA;AAAA;;AAAA,aAAA,UAAA;AAAA,OADA;AAMA,IAAA,MAAA;AAAA,4EAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA,gBAAA,QAHA,GAGA,IAAA,QAAA,EAHA;AAKA,gBAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,KAAA;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,SAAA;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,KAAA;AAPA,uDASA,QAAA,CAAA,OAAA,EATA;;AAAA;AASA,sEAAA;AAAA,oBAAA,GAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,IAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;;AAYA,gBAAA,OAZA,GAYA;AACA,kCAAA;AADA,iBAZA;AAgBA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,gBAAA,KAAA,CACA,IADA,CACA,8BADA,EACA,QADA,EACA;AACA,kBAAA,OAAA,EAAA;AADA,iBADA,EAIA,IAJA,CAIA,YAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;AACA,iBANA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBATA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,eAAA,MAAA;AAAA;AAAA;;AAAA,aAAA,MAAA;AAAA;AANA;AARA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n      <label for=\"file\">Thumbnail</label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"thumbnail\"\r\n        ref=\"thumbnail\"\r\n        name=\"thumbnail\"\r\n        v-on:change=\"handleFile()\"\r\n        required\r\n      />\r\n      <label for=\"video\">Video</label>\r\n      <input\r\n        type=\"file\"\r\n        name=\"video\"\r\n        id=\"video\"\r\n        ref=\"video\"\r\n        v-on:change=\"handleFile()\"\r\n        required\r\n      />\r\n      <input\r\n      type=\"text\"\r\n      placeholder=\"Title...\"\r\n      v-model=\"title\"\r\n      required\r\n    />\r\n\r\n      <button type=\"submit\" v-on:click=\"upload()\">Submit</button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      thumbnail: \"\",\r\n      video: \"\",\r\n      title:\"\"\r\n    };\r\n  },\r\n  methods: {\r\n    handleFile: async function handleFile() {\r\n      console.log(this.$refs);\r\n      this.thumbnail = this.$refs.thumbnail.files[0];\r\n      this.video = this.$refs.video.files[0];\r\n    },\r\n    upload: async function upload() {\r\n      //var variables = this\r\n\r\n      let formdata = new FormData();\r\n\r\n      formdata.append(\"video\", this.video)\r\n      formdata.append(\"thumbnail\", this.thumbnail)\r\n      formdata.append(\"title\", this.title)\r\n\r\n      for (var key of formdata.entries()) {\r\n        console.log(key[0] + \", \" + key[1]);\r\n      }\r\n      const headers = {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      };\r\n\r\n      console.log(formdata);\r\n      axios\r\n        .post(\"http://localhost:3000/upload\", formdata, {\r\n          headers: headers,\r\n        })\r\n        .then(function () {\r\n          console.log(\"Nodejs working now\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"sourceRoot":"src/components"}]}